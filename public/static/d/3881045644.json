{"data":{"allContentfulBlogPost":{"edges":[{"node":{"id":"9d8dbe96-a53d-5e93-bf37-abed620538bd","bodyRu":{"childContentfulRichText":{"html":"<h4>Сегодня мы настроим необходимые плагины для Гэтсби.JS.</h4><p>Я надеюсь, что мы справились с тем, что было упомянуто в <a href=\"https://alex-vorotov.gq/blog/tech/portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-2/\">предыдущей статье</a>, и теперь у нас есть действительный домен, и мы можем начать настраивать наше приложение.\nПрежде чем приступить к рассмотрению элементов страницы как в частности тайтлов и прочего, так и c точки зрения SEO, давайте сделаем оговорку: SEO строится не только на этих факторах. Она также включает в себя такие понятия, как действительная карта сайта, робот.txt и т. д.\nЕсть много моментов, благодаря Гэтсби.js есть много допустимых плагинов, чтобы минимизировать наши проблемы. Весь код можно посмотреть в моем <a href=\"https://github.com/al-vorotov/envs\">Github</a>, и я постараюсь описать, для чего мы будем его использовать.</p><h4>\nУстановка энвайроментола.</h4><p>\nГэтсби.js по умолчанию отслеживает зависимости в gatsby-config.js, но мы можем изменить его поведение для различных сред, создав gatsby-config.файлы prod и env соответственно. env.prod и env.stage, в которой мы будем скрывать наши необходимые переменные в будущем.\nВ Гэтсби-конфиг кладем код:</p><p><code>const gatsbyConfig = require(`./gatsby-config-generator`)\ntry {\n  require(&#39;dotenv&#39;).config({\n    path: `.env.staging`,\n  })\n} catch (e) {\n  console.error(\n    &#39;Cannot find correct environment variables, reverting to dummies&#39;\n  )\n  throw Error(&#39;No ENV file found&#39;)\n}\n\nmodule.exports = gatsbyConfig()</code></p><p><code>GATSBY_ENV=&#39;staging&#39;\nGATSBY_GOOGLE_ANALYTICS_KEY=&#39;&#39;</code></p><p>И теперь нам остается только создать документ gatsby-config-generator.js, внутри которого будут располагаться настройки плагинов:</p><p><code>module.exports = () =&gt; ({\n  siteMetadata: {},\n  plugins: [],\n})</code></p><p>Примерная структура файлов, которую мы должны получить.</p><img \nsrc=\"//images.ctfassets.net/wj6pzgesw36a/2jIKYvrOWUymWOySEl2Uek/b6422efce97f7049758d06671be46a57/__________________________2020-04-20____23.32.45.png\" \nalt=\"Not more about gatsby structure.\"\n/><p></p><p>Немного больше об этом можно <a href=\"https://www.gatsbyjs.org/docs/environment-variables/\">прочитать здесь</a>.</p><h4>Мой набор плагинов</h4><p>Я оставлю все плагины, которые без настроек, без описания. Узнать больше о них вы можете в <a href=\"https://www.gatsbyjs.org/plugins/\">официальной документации</a>. Я считаю их проверенными и абсолютно валидными, каждый из этих плагинов пригодиться нам в будущем. </p><p><code>`gatsby-plugin-react-helmet`,\n`gatsby-transformer-sharp`,\n`gatsby-plugin-sharp`,\n`gatsby-plugin-offline`,\n`gatsby-plugin-sass`,</code></p><p>Теперь по конфигурациям.</p><p><code>{\n  resolve: `gatsby-plugin-sitemap`,\n  options: {\n    output: `/sitemap.xml`,\n  },\n},</code></p><p>gatsby-plugin-sitemap дает нам возможность создания динамической сайтмап, которая собирает в каждый билд актуальные значения. В опциях указываем желаемый путь выхода файла.</p><p><code>const {\n  NODE_ENV,\n  URL: NETLIFY_SITE_URL = &#39;https://www.you-site/&#39;,\n  DEPLOY_PRIME_URL: NETLIFY_DEPLOY_URL = NETLIFY_SITE_URL,\n  CONTEXT: NETLIFY_ENV = NODE_ENV,\n} = process.env\nconst isNetlifyProduction = NETLIFY_ENV === &#39;production&#39;\nconst siteUrl = isNetlifyProduction ? NETLIFY_SITE_URL : NETLIFY_DEPLOY_URL</code></p><p><code>{\n  resolve: &#39;gatsby-plugin-robots-txt&#39;,\n  options: {\n    resolveEnv: () =&gt; NETLIFY_ENV,\n    env: {\n      production: {\n        policy: [{ userAgent: &#39;*&#39; }],\n      },\n      &#39;branch-deploy&#39;: {\n        policy: [{ userAgent: &#39;*&#39;, disallow: [&#39;/&#39;] }],\n        sitemap: null,\n        host: null,\n      },\n      &#39;deploy-preview&#39;: {\n        policy: [{ userAgent: &#39;*&#39;, disallow: [&#39;/&#39;] }],\n        sitemap: null,\n        host: null,\n      },\n    },\n  },\n},</code></p><p><code>gatsby-plugin-robots-txt создает robots.txt</code></p><p><code>{\n  resolve: `gatsby-plugin-manifest`,\n  options: {\n    name: ``,\n    short_name: ``,\n    start_url: `/`,\n    background_color: `#663399`,\n    theme_color: `#663399`,\n    display: `minimal-ui`,\n    icon: `src/assets/images/you-icon.png`,\n  },\n},</code></p><p><code>gatsby-plugin-manifest </code>необходим для создания<a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B5%D1%81%D1%81%D0%B8%D0%B2%D0%BD%D0%BE%D0%B5_%D0%B2%D0%B5%D0%B1-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5\"> PWA </a> . В опции необходимо передать сконфигурированный manifest.json. Для его создания можно воспользоваться <a href=\"https://app-manifest.firebaseapp.com/\">генератором манифеста</a>.</p><p>Этих плагинов будет достаточно для создания оптимизированного приложения на  gatsby.js . Также вы можете найти для себя все необходимое в документации.</p><h4>Спасибо за внимание!</h4><p></p>"}},"body":{"childContentfulRichText":{"html":"<h4>Today we will configure the necessary plugins for Gatsby.js .</h4><p>\nI hope we have managed with what was mentioned in the <a href=\"https://alex-vorotov.gq/blog/tech/portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-2/\">last article</a> and now we have a valid domain and can start configuring our application.\nBefore proceeding to the consideration of page elements both in particular and with\nfrom the point of view of SEO, let&#39;s make a reservation: SEO is not only based on these factors build. It also includes concepts such as valid siteMap, robots.txt, etc.\nThere are a lot of points, thanks to Gatsby.js has a lot of valid plugins to minimize our problems. All the code can be viewed in my <a href=\"https://github.com/al-vorotov/envs\">Github</a> and I will try to describe what we will use it for.</p><h4>Setting enviromental.</h4><p>Gatsby.js by default, it monitors dependencies in gatsby-config.js but we can change its behavior for different environments by creating gatsby-config.prod and env files, respectively. env. production and. env.staging, in which we will hide our necessary variables in the future.\nIn the gatsby-config putting the code:</p><p><code>const gatsbyConfig = require(`./gatsby-config-generator`)\n\ntry {\n  require(&#39;dotenv&#39;).config({\n    path: `.env.staging`,\n  })\n} catch (e) {\n  console.error(\n    &#39;Cannot find correct environment variables, reverting to dummies&#39;\n  )\n  throw Error(&#39;No ENV file found&#39;)\n}\n\nmodule.exports = gatsbyConfig()</code></p><p>.env.staging put this</p><p><code>GATSBY_ENV=&#39;staging&#39;\nGATSBY_GOOGLE_ANALYTICS_KEY=&#39;&#39;</code></p><p>And now all we have to do is create a gatsby-config-generator that will contain the plugin settings:</p><p><code>module.exports = () =&gt; ({\n  siteMetadata: {},\n  plugins: [],\n})</code></p><p>it is looks like are this:</p><img \nsrc=\"//images.ctfassets.net/wj6pzgesw36a/2jIKYvrOWUymWOySEl2Uek/b6422efce97f7049758d06671be46a57/__________________________2020-04-20____23.32.45.png\" \nalt=\"Not more about gatsby structure.\"\n/><p></p><p>A little more about this can be read here.</p><h4>\nMy set of plug-ins</h4><p>\nI will leave all plugins that have no settings without a description. You can find out more about them in the <a href=\"https://www.gatsbyjs.org/plugins/\">official documentation</a>. I think they are absolutely valid and tested each of these plugins useful to us in the future.</p><p><code>`gatsby-plugin-react-helmet`,\n`gatsby-transformer-sharp`,\n`gatsby-plugin-sharp`,\n`gatsby-plugin-offline`,\n`gatsby-plugin-sass`,</code></p><p>and configuration together</p><p><code>{\n  resolve: `gatsby-plugin-sitemap`,\n  options: {\n    output: `/sitemap.xml`,\n  },\n},</code></p><p>gatsby-plugin-sitemap this allows us to create a dynamic site map that collects current values in each build. In the options, specify the desired file exit path.</p><p><code>const {\n  NODE_ENV,\n  URL: NETLIFY_SITE_URL = &#39;https://www.you-site/&#39;,\n  DEPLOY_PRIME_URL: NETLIFY_DEPLOY_URL = NETLIFY_SITE_URL,\n  CONTEXT: NETLIFY_ENV = NODE_ENV,\n} = process.env\nconst isNetlifyProduction = NETLIFY_ENV === &#39;production&#39;\nconst siteUrl = isNetlifyProduction ? NETLIFY_SITE_URL : NETLIFY_DEPLOY_URL</code></p><p><code>{\n  resolve: &#39;gatsby-plugin-robots-txt&#39;,\n  options: {\n    resolveEnv: () =&gt; NETLIFY_ENV,\n    env: {\n      production: {\n        policy: [{ userAgent: &#39;*&#39; }],\n      },\n      &#39;branch-deploy&#39;: {\n        policy: [{ userAgent: &#39;*&#39;, disallow: [&#39;/&#39;] }],\n        sitemap: null,\n        host: null,\n      },\n      &#39;deploy-preview&#39;: {\n        policy: [{ userAgent: &#39;*&#39;, disallow: [&#39;/&#39;] }],\n        sitemap: null,\n        host: null,\n      },\n    },\n  },\n},</code></p><p>gatsby-plugin-robots-txt created robots.txt</p><p><code>{\n  resolve: `gatsby-plugin-manifest`,\n  options: {\n    name: ``,\n    short_name: ``,\n    start_url: `/`,\n    background_color: `#663399`,\n    theme_color: `#663399`,\n    display: `minimal-ui`,\n    icon: `src/assets/images/you-icon.png`,\n  },\n},</code></p><p>gatsby-plugin-manifest required for creation<a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B5%D1%81%D1%81%D0%B8%D0%B2%D0%BD%D0%BE%D0%B5_%D0%B2%D0%B5%D0%B1-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5\"> PWA </a>  </p><p>These plugins will be enough to create an optimized app on gatsby.js . You can also find everything you need in the documentation.</p><h4>Thank you for attention!</h4><p></p>"}},"category":"Технологии","categoryEn":"tech","date":"2020-04-19T00:00+03:00","title":{"childContentfulRichText":{"html":"<h2>Portfolio on Gatsby &amp; Netlife is very fast and optimized. Part-3</h2><p></p>"}},"titleRu":{"childContentfulRichText":{"html":"<h2>Портфолио на Gatsby &amp; Netlife очень быстро и оптимизированно. Часть-3</h2><p></p>"}},"slug":"portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-3","thumb":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/59cwt7E7H9HHxHohj2EpOc/3eddb884c20d6de3b5e5fd912630860a/thumbForPost.jpg"}},"header":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/2ECNWrw9IOlsrYFfX25k3H/6eaba880dbfe0a590ac40399e211c42d/header-gatsby-part-3.jpg"}},"avatar":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/4hFMvKnI7cLGtybIFLL1X6/339e61ebbf8262d7f87e7919466f0d01/avatar.jpeg"}},"postedBy":"Alexander Vorotov","postedByRu":"Александр Воротов"}},{"node":{"id":"f05a7fe2-3f08-5f2d-8bf5-08c71858671c","bodyRu":{"childContentfulRichText":{"html":"<h4>Сегодня мы продолжим рассмотрение Gatsby.js + Netlify.</h4><p>Если у вас получилось все что я описал в <a href=\"https://alex-vorotov.gq/blog/tech/portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-1/\">прошлой статье</a> то поздравляю вас ваш сайт онлайн, можете начинать делится ссылкой с друзьями. Правда ссылка имеет нечитабельный вид. </p><p>Сегодня мы постараемся исправить это вместе с вами. </p><p>Выбираем пункт 2. И ознакамливаемся с ценами интересующего нас доменного имени.</p><img \nsrc=\"//images.ctfassets.net/wj6pzgesw36a/1WqpWc93t5etelfc5Llp6n/30e032f4f102ecbdbaa26f70a466dd9a/__________________________2020-04-07____21.05.51.png\" \nalt=\"default setings\"\n/><p></p><p>Но есть способ зарегистрировать доменное имя бесплатно для этого воспользуемся сервисом <a href=\"https://www.freenom.com/ru/index.html?lang=ru\">Freenom</a> в нем проходим регистрацию и закрепляем за собой право обладания доменом на год(бесплатное продление за 15 дней до истечения срока). После регистрации доменного имени добавляем домен на Netlife.</p><p>Так как наш домен зарегестрирован у другого провайдера нам необходимо перенаправить DNS трафик на Netlify для этого обращаем внимание на вкладку Nameservers и копируем все адреса. </p><p>Возвращаемся на Freenom переходим по этой <a href=\"https://my.freenom.com/clientarea.php?action=domains\">ссылке</a>  выбираем пункт Manage domain в нем переходим во вкладку Manage Freenom DNS вносим записи которые мы получили на Netlify. После сохранения возвращаемся на Netlify во вкладку Domains и видим банер об успешном трансфере трафика. После этого активируем HTTPS. </p><p>Теперь наш сайт имеет человекочитаемое доменное имя. </p><p>В следующей статье мы с вами сконфигурируем наш проект со всеми необходимыми плагинами для SEO.</p><h4>Спасибо за внимание!</h4><p></p>"}},"body":{"childContentfulRichText":{"html":"<h4>Today we continue our discussion of Gatsby.js + Netlify.</h4><p>\nIf you have everything that I described in the <a href=\"https://alex-vorotov.gq/blog/tech/portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-1/\">last article</a>, then I congratulate you on your site online, you can start sharing the link with your friends. True link has an unreadable look.\nToday we will try to fix it with you.\nWe select point 2. And familiarize ourselves with the prices of the domain name that interests us.</p><img \nsrc=\"//images.ctfassets.net/wj6pzgesw36a/1WqpWc93t5etelfc5Llp6n/30e032f4f102ecbdbaa26f70a466dd9a/__________________________2020-04-07____21.05.51.png\" \nalt=\"default setings\"\n/><p></p><p>But there is a way to register a domain name for free, we will use the <a href=\"https://www.freenom.com/en/index.html?lang=en\">Freenom</a> service in it, we will register and reserve the right to own the domain for a year (free renewal 15 days before the deadline). After registering a domain name, add the domain to Netlife.</p><p>Since our domain is registered with another provider, we need to redirect DNS traffic to Netlify. For this, we pay attention to the Nameservers tab and copy all the addresses.</p><p>We return to Freenom follow this link, select the Manage domain item in it, go to the Manage Freenom DNS tab, make the entries that we received on Netlify. After saving, we return to Netlify in the Domains tab and see a banner about the successful transfer of traffic. After that, activate HTTPS.</p><p>Our site now has a human-readable domain name.</p><p>In the next article, we will configure our project with all the necessary plugins for SEO.</p><h4>Thank you for attention!</h4><p></p>"}},"category":"Технологии","categoryEn":"tech","date":"2020-04-09T00:00+03:00","title":{"childContentfulRichText":{"html":"<h2>Portfolio on Gatsby &amp; Netlife is very fast and optimized. Part-2</h2><p></p>"}},"titleRu":{"childContentfulRichText":{"html":"<h2>Портфолио на Gatsby &amp; Netlife очень быстро и оптимизированно. Часть-2</h2><p></p>"}},"slug":"portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-2","thumb":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/59cwt7E7H9HHxHohj2EpOc/3eddb884c20d6de3b5e5fd912630860a/thumbForPost.jpg"}},"header":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/5Lz79XAQ4ro9ZpahZEjTUI/959b8c56a95d57768fd66caea67cbfbf/header.png"}},"avatar":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/4hFMvKnI7cLGtybIFLL1X6/339e61ebbf8262d7f87e7919466f0d01/avatar.jpeg"}},"postedBy":"Alexander Vorotov","postedByRu":"Александр Воротов"}},{"node":{"id":"38fe88f4-0301-5140-8b5a-095aba805b6d","bodyRu":{"childContentfulRichText":{"html":"<h4>Быстрый и удобный Gatsby.js</h4><p>\nЭто генератор статических сайтов на React , который создает ваш сайт как «статические» файлы, которые можно легко развернуть на десятках сервисов. Сам Gatsby рекомендует платформу Netlify Это универсальная платформа, которая упрощает большинство повседневных задач(билд, тест, деплой, обработка форм и.т.д.) </p><p>Netlify умеет подвязываться к GitHub , что позволяет делать билды прямо из репозитория. И при этом он имеет бесплатный тариф, которого достаточно для повседневных задач.</p><p>• Начнем с первого шага. Создадим акаунт на гитхаб и создадим свой первый репозиторий. </p><p>• Переходим на страницу быстрого старта и, используя команду <code>npm install -g gatsby-cli</code> , устанавливаем Gatsby cli </p><p>• После установки используем команду <code>gatsby new gatsby-site</code> для создания нашего первого проекта. Рекомендую сразу обратить внимание на вкладку стартеров . Можно использовать сразу готовые сборки для ваших приложений по разным группам и направлениям. Более подробную вводную информацию можно найти по этой ссылке. Теперь, когда мы развернули проект локально, мы можем попробовать запустить его. Для этого используем команду <code>gatsby develop</code>. Это даст нам возможность посмотреть наш проект по адресу http://localhost:8000/ После ознакомления с нашим сайтом мы можем вернуться к настройке Git репозиторию. Находясь в дериктории проекта, исполняем подряд следующие команды </p><p><code>git init</code></p><p><code>git add .</code></p><p><code>git commit -m &#39;initial&#39;</code> </p><p><code>git remote add origin https://github.com/you-name/you-repository</code></p><p><code>git push -u origin master</code></p><p> После успешного исполнения всех команд мы можем увидеть в нашем репозитории все файлы вновь созданного проекта. Теперь нам необходимо зарегистрироваться на сервисе Netlify.\n• Выбираем регистрацию через Github. </p><p>• Используем бесплатный тарифный план. После регистрации в пункте «добавить новый сайт» выбираем Github и наш репозиторий.</p><p> Дожидаемся окончания сборки проекта и проверяем ссылку.</p><h4>\nПоздравляю вас! Ваш сайт онлайн.</h4><p></p>"}},"body":{"childContentfulRichText":{"html":"<h3>Fast and convenient Gatsby.js</h3><p>\nThis is a <a href=\"https://reactjs.org/\">React</a> static site generator that creates your site as “static” files that can be easily deployed to dozens of services. <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> himself recommends the Netlify platform. This is a universal platform that simplifies most everyday tasks (build, test, deployment, form processing, etc.)\nNetlify can bind to <a href=\"https://github.com/\">GitHub</a> which allows you to build directly from the repository. And at the same time he has a free tariff which is enough for everyday tasks.</p><p>• Let&#39;s start with the first step. Create an account on github and create your first repository.\n• Go to the <a href=\"https://www.gatsbyjs.org/docs/quick-start/\">quick start page</a> and using the  <code>npm install -g gatsby-cli</code> command, install Gatsby cli\n• After installation, use the <code>gatsby new gatsby-site</code> command to create our first project. I recommend immediately paying attention to the <a href=\"https://www.gatsbyjs.org/starters?v=2\">starters</a> tab you can use immediately ready-made assemblies for your applications in different groups and directions. More introductory information can be found at this link.\nNow that we have deployed the project locally, we can try to launch it for this. We use the  gatsby develop command. This will give us the opportunity to see our project at http://localhost:8000/\nAfter reviewing our site, we can return to the Git repository. Being in the project directory we execute teams in a row\n<code>git init\ngit add .\ngit commit -m &#39;initial&#39;\ngit remote add origin https://github.com/you-name/you-repository\ngit push -u origin master</code>\nAfter the successful execution of all commands, we can see in our repository all the files of the newly created project.\nNow we need to register on the Netlify service.</p><p>• We select registration through Github.\n• We use a free tariff plan.\nAfter registering at the point to add a new site, select Github and our repository.\nWe are waiting for the completion of the project assembly and check the link.</p><h4>Congratulations on your site online!</h4><p></p>"}},"category":"технологии","categoryEn":"tech","date":"2020-04-06T00:00+03:00","title":{"childContentfulRichText":{"html":"<h2>Portfolio on Gatsby &amp; Netlife is very fast and optimized. Part-1</h2><p></p>"}},"titleRu":{"childContentfulRichText":{"html":"<h2>Портфолио на Gatsby &amp; Netlife очень быстро и оптимизированно Часть-1.</h2><p></p>"}},"slug":"portfolio-on-gatsby-netlife-is-very-fast-and-optimized-part-1","thumb":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/59cwt7E7H9HHxHohj2EpOc/3eddb884c20d6de3b5e5fd912630860a/thumbForPost.jpg"}},"header":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/7vhzcLbMfOGM9Zi4U0ujat/2892cff351da5bcfa9297696979319f1/header.jpg"}},"avatar":{"file":{"url":"//images.ctfassets.net/wj6pzgesw36a/4hFMvKnI7cLGtybIFLL1X6/339e61ebbf8262d7f87e7919466f0d01/avatar.jpeg"}},"postedBy":"Alexander Vorotov","postedByRu":"Александр Воротов"}}]}}}